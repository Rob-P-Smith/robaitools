# ============================================================================
# RobAI Tools - Centralized Environment Configuration
# ============================================================================
# Copy this file to .env and configure for your environment
# IMPORTANT: Never commit .env to git (it contains secrets!)
# ============================================================================

# ============================================================================
# CORE SERVICES - Shared Infrastructure
# ============================================================================

# ----------------------------------------------------------------------------
# vLLM Configuration (robaivllm)
# ----------------------------------------------------------------------------
# Base URL for vLLM OpenAI-compatible API
VLLM_BASE_URL=http://localhost:8078
VLLM_TIMEOUT=1800
VLLM_MAX_TOKENS=65536
VLLM_TEMPERATURE=0.1

# ----------------------------------------------------------------------------
# Crawl4AI Service (robaicrawler)
# ----------------------------------------------------------------------------
CRAWL4AI_URL=http://localhost:11235

# ----------------------------------------------------------------------------
# Neo4j Knowledge Graph Database (robaikg/neo4j)
# ----------------------------------------------------------------------------
# Authentication
NEO4J_USER=neo4j
NEO4J_PASSWORD=knowledge_graph_2024

# Connection settings
NEO4J_URI=bolt://localhost:7687
NEO4J_DATABASE=neo4j
NEO4J_MAX_CONNECTION_LIFETIME=3600
NEO4J_MAX_CONNECTION_POOL_SIZE=50
NEO4J_CONNECTION_TIMEOUT=30

# Memory settings (adjust based on your system RAM)
NEO4J_HEAP_INITIAL_SIZE=512m
NEO4J_HEAP_MAX_SIZE=16G
NEO4J_PAGECACHE_SIZE=2G

# Thread pool settings
NEO4J_BOLT_THREAD_POOL_MIN=5
NEO4J_BOLT_THREAD_POOL_MAX=400

# Query logging
NEO4J_QUERY_LOG_ENABLED=INFO
NEO4J_QUERY_LOG_THRESHOLD=1s

# ----------------------------------------------------------------------------
# Knowledge Graph Service (robaikg/kg-service)
# ----------------------------------------------------------------------------
KG_SERVICE_NAME=kg-service
KG_SERVICE_VERSION=1.0.0
KG_SERVICE_HOST=0.0.0.0
KG_SERVICE_PORT=8088
KG_DEBUG=false
KG_LOG_LEVEL=INFO

# GLiNER Entity Extraction
GLINER_MODEL=urchade/gliner_large-v2.1
GLINER_THRESHOLD=0.45
GLINER_BATCH_SIZE=8
USE_GLINER_ENTITIES=true

# Relationship Extraction
RELATION_MAX_DISTANCE=5
RELATION_MIN_CONFIDENCE=0.35
RELATION_CONTEXT_WINDOW=100

# ============================================================================
# RAG SYSTEM - MCP Server & API Bridge
# ============================================================================

# ----------------------------------------------------------------------------
# MCP Server (robaitragmcp)
# ----------------------------------------------------------------------------
# Database Configuration
DB_PATH=/app/data/crawl4ai_rag.db
USE_MEMORY_DB=true

# Blocked Domain Management
BLOCKED_DOMAIN_KEYWORD=your-secret-keyword-here

# MCP Server Logging
MCP_LOG_LEVEL=INFO

# ----------------------------------------------------------------------------
# RAG API Bridge (robairagapi)
# ----------------------------------------------------------------------------
# Server Configuration
RAGAPI_SERVER_HOST=0.0.0.0
RAGAPI_SERVER_PORT=8080

# Authentication (at least one required)
LOCAL_API_KEY=your-secret-api-key-here
REMOTE_API_KEY_2=optional-second-api-key

# Rate Limiting
RATE_LIMIT_PER_MINUTE=60
ENABLE_RATE_LIMIT=true

# MCP Connection
MCP_SERVER_HOST=localhost
MCP_SERVER_PORT=3000
MCP_CONNECTION_TIMEOUT=30

# CORS Configuration (comma-separated origins, or * for all)
ENABLE_CORS=true
CORS_ORIGINS=http://localhost:80,http://192.168.10.50:80,*

# Logging
RAGAPI_LOG_LEVEL=INFO

# ============================================================================
# PROXY SERVICE - Request Router
# ============================================================================

# ----------------------------------------------------------------------------
# Research Proxy (robaiproxy)
# ----------------------------------------------------------------------------
# vLLM Backend
PROXY_VLLM_URL=http://localhost:8078/v1

# MCP/RAG API Configuration
REST_API_URL=http://localhost:8080/api/v1
REST_API_KEY=your-mcp-api-key-here

# External APIs
SERPER_API_KEY=your-serper-api-key-here

# Research Queue Limits
MAX_STANDARD_RESEARCH=3
MAX_DEEP_RESEARCH=1

# Timeout Configuration (seconds)
PROXY_VLLM_TIMEOUT=300
PROXY_MCP_TIMEOUT=60
SERPER_TIMEOUT=30

# Server Configuration
PROXY_HOST=0.0.0.0
PROXY_PORT=8079
PROXY_LOG_LEVEL=INFO

# Feature Flags
AUTO_DETECT_MODEL=true
MODEL_POLL_INTERVAL=2

# ============================================================================
# OPTIONAL SERVICES
# ============================================================================

# ----------------------------------------------------------------------------
# Open WebUI (if using)
# ----------------------------------------------------------------------------
OPENAI_API_BASE_URL=http://192.168.10.50:8080/v1
OPENAI_API_KEY=your-api-key-here

# ============================================================================
# DEPLOYMENT CONFIGURATION
# ============================================================================

# Docker Compose Project Name
COMPOSE_PROJECT_NAME=robaitools

# Volume Paths (relative to docker-compose.yml location)
ROBAI_DATA_PATH=./robaidata
ROBAI_NEO4J_DATA_PATH=./robaikg/neo4j/data
ROBAI_NEO4J_LOGS_PATH=./robaikg/neo4j/logs

# Model Cache Path
ROBAI_MODEL_CACHE=./models

# ============================================================================
# NOTES & DOCUMENTATION
# ============================================================================
#
# Service Port Map:
# -----------------
# 8078  - vLLM OpenAI-compatible API
# 8079  - Research Proxy (request router)
# 8080  - RAG API Bridge (REST API)
# 8088  - Knowledge Graph Service API
# 3000  - MCP Server (internal, TCP)
# 7474  - Neo4j Browser (HTTP)
# 7687  - Neo4j Bolt Protocol
# 11235 - Crawl4AI Service
#
# Service Dependencies:
# ---------------------
# vllm-qwen3 (no dependencies)
# crawl4ai (no dependencies)
# neo4j → crawl4ai (network)
# kg-service → neo4j + vllm-qwen3
# robaitragmcp → crawl4ai + kg-service
# robairagapi → robaitragmcp
# robaiproxy (standalone, calls RAGAPI + vLLM)
#
# Data Persistence:
# -----------------
# All databases stored in: ./robaidata/
# - crawl4ai_rag.db (RAG database, SQLite)
# Neo4j data: ./robaikg/neo4j/data/
# Model cache: ./robaikg/kg-service/models/ (GLiNER, etc.)
#
